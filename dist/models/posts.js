"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Mongo = require("../lib/mongo");
const marked = require("marked");
const comments_1 = require("./comments");
const Post = Mongo.Post;
// 将 post 的 content 从 markdown 转换成 html
Post.plugin('contentToHtml', {
    afterFind: function (posts) {
        return posts.map(function (post) {
            post.content = marked(post.content);
            return post;
        });
    },
    afterFindOne: function (post) {
        if (post) {
            post.content = marked(post.content);
        }
        return post;
    }
});
Post.plugin('addCommentsCount', {
    afterFind: function (posts) {
        return Promise.all(posts.map(post => {
            return comments_1.default.getCommentsCount(post._id).then(commentsCount => {
                post.commenCount = commentsCount;
                return post;
            });
        }));
    },
    afterFindOne: function (post) {
        if (post) {
            return comments_1.default.getCommentsCount(post._id).then(count => {
                post.commenCount = count;
                return post;
            });
        }
        return post;
    }
});
exports.default = {
    create: function (post) {
        return Post.create(post).exec();
    },
    // 通过文章 id 获取一篇文章
    getPostById: function getPostById(postId) {
        return Post
            .findOne({ _id: postId })
            .populate({ path: 'author', model: 'User' })
            .convertCreatedAt()
            .addCommentsCount()
            .contentToHtml()
            .exec();
    },
    // 按创建时间降序获取所有用户文章或者某个特定用户的所有文章
    getPosts: function getPosts(author) {
        const query = {};
        if (author) {
            query.author = author;
        }
        return Post
            .find(query)
            .populate({ path: 'author', model: 'User' })
            .sort({ _id: -1 })
            .convertCreatedAt()
            .addCommentsCount()
            .contentToHtml()
            .exec();
    },
    incPv: function (postId) {
        return Post
            .update({ id: postId }, { $inc: { pv: 1 } })
            .exec();
    },
    getRawPostById: function (postId) {
        return Post
            .findOne({ _id: postId })
            .populate({ path: 'author', model: 'User' })
            .exec();
    },
    updatePostById: function (postId, data) {
        return Post
            .update({ _id: postId }, { $set: data })
            .exec();
    },
    delPostById: function (postId) {
        return Post
            .deleteOne({ _id: postId })
            .exec()
            .then(res => {
            if (res.result.ok && res.result.n > 0) {
                return comments_1.default.delCommentsByPostId(postId);
            }
        });
    }
};

//# sourceMappingURL=data:application/json;charset=utf8;base64,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b2RlbHMvcG9zdHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBNb25nbyBmcm9tICcuLi9saWIvbW9uZ28nO1xuaW1wb3J0ICogYXMgbWFya2VkIGZyb20gJ21hcmtlZCcgO1xuaW1wb3J0IENvbW1lbnRNb2RlbCBmcm9tICcuL2NvbW1lbnRzJztcblxuY29uc3QgUG9zdCA9IE1vbmdvLlBvc3Q7XG5cbi8vIOWwhiBwb3N0IOeahCBjb250ZW50IOS7jiBtYXJrZG93biDovazmjaLmiJAgaHRtbFxuUG9zdC5wbHVnaW4oJ2NvbnRlbnRUb0h0bWwnLCB7XG4gICAgYWZ0ZXJGaW5kOiBmdW5jdGlvbiAocG9zdHMpIHtcbiAgICAgIHJldHVybiBwb3N0cy5tYXAoZnVuY3Rpb24gKHBvc3QpIHtcbiAgICAgICAgcG9zdC5jb250ZW50ID0gbWFya2VkKHBvc3QuY29udGVudClcbiAgICAgICAgcmV0dXJuIHBvc3RcbiAgICAgIH0pXG4gICAgfSxcbiAgICBhZnRlckZpbmRPbmU6IGZ1bmN0aW9uIChwb3N0KSB7XG4gICAgICBpZiAocG9zdCkge1xuICAgICAgICBwb3N0LmNvbnRlbnQgPSBtYXJrZWQocG9zdC5jb250ZW50KVxuICAgICAgfVxuICAgICAgcmV0dXJuIHBvc3RcbiAgICB9XG59KVxuXG5Qb3N0LnBsdWdpbignYWRkQ29tbWVudHNDb3VudCcsIHtcbiAgICBhZnRlckZpbmQ6IGZ1bmN0aW9uKHBvc3RzKXtcbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHBvc3RzLm1hcChwb3N0ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBDb21tZW50TW9kZWwuZ2V0Q29tbWVudHNDb3VudChwb3N0Ll9pZCkudGhlbihjb21tZW50c0NvdW50ID0+IHtcbiAgICAgICAgICAgICAgICBwb3N0LmNvbW1lbkNvdW50ID0gY29tbWVudHNDb3VudDtcblxuICAgICAgICAgICAgICAgIHJldHVybiBwb3N0O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pKTtcbiAgICB9LFxuICAgIGFmdGVyRmluZE9uZTogZnVuY3Rpb24ocG9zdCl7XG4gICAgICAgIGlmKHBvc3Qpe1xuICAgICAgICAgICAgcmV0dXJuIENvbW1lbnRNb2RlbC5nZXRDb21tZW50c0NvdW50KHBvc3QuX2lkKS50aGVuKGNvdW50ID0+IHtcbiAgICAgICAgICAgICAgICBwb3N0LmNvbW1lbkNvdW50ID0gY291bnQ7XG5cbiAgICAgICAgICAgICAgICByZXR1cm4gcG9zdDtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwb3N0O1xuICAgIH1cbn0pO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGNyZWF0ZTogZnVuY3Rpb24ocG9zdCl7XG4gICAgICAgIHJldHVybiBQb3N0LmNyZWF0ZShwb3N0KS5leGVjKCk7XG4gICAgfSxcbiAgICAvLyDpgJrov4fmlofnq6AgaWQg6I635Y+W5LiA56+H5paH56ugXG4gICAgZ2V0UG9zdEJ5SWQ6IGZ1bmN0aW9uIGdldFBvc3RCeUlkIChwb3N0SWQpIHtcbiAgICAgICAgcmV0dXJuIFBvc3RcbiAgICAgICAgLmZpbmRPbmUoeyBfaWQ6IHBvc3RJZCB9KVxuICAgICAgICAucG9wdWxhdGUoeyBwYXRoOiAnYXV0aG9yJywgbW9kZWw6ICdVc2VyJyB9KVxuICAgICAgICAuY29udmVydENyZWF0ZWRBdCgpXG4gICAgICAgIC5hZGRDb21tZW50c0NvdW50KClcbiAgICAgICAgLmNvbnRlbnRUb0h0bWwoKVxuICAgICAgICAuZXhlYygpO1xuICAgIH0sXG4gICAgLy8g5oyJ5Yib5bu65pe26Ze06ZmN5bqP6I635Y+W5omA5pyJ55So5oi35paH56ug5oiW6ICF5p+Q5Liq54m55a6a55So5oi355qE5omA5pyJ5paH56ugXG4gICAgZ2V0UG9zdHM6IGZ1bmN0aW9uIGdldFBvc3RzIChhdXRob3IpIHtcbiAgICAgICAgY29uc3QgcXVlcnk6IGFueSA9IHt9XG4gICAgICAgIGlmIChhdXRob3IpIHtcbiAgICAgICAgICAgIHF1ZXJ5LmF1dGhvciA9IGF1dGhvclxuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQb3N0XG4gICAgICAgICAgICAuZmluZChxdWVyeSlcbiAgICAgICAgICAgIC5wb3B1bGF0ZSh7IHBhdGg6ICdhdXRob3InLCBtb2RlbDogJ1VzZXInIH0pXG4gICAgICAgICAgICAuc29ydCh7IF9pZDogLTEgfSlcbiAgICAgICAgICAgIC5jb252ZXJ0Q3JlYXRlZEF0KClcbiAgICAgICAgICAgIC5hZGRDb21tZW50c0NvdW50KClcbiAgICAgICAgICAgIC5jb250ZW50VG9IdG1sKClcbiAgICAgICAgICAgIC5leGVjKCk7XG4gICAgfSxcbiAgICBpbmNQdjogZnVuY3Rpb24ocG9zdElkKXtcbiAgICAgICAgcmV0dXJuIFBvc3RcbiAgICAgICAgICAgIC51cGRhdGUoe2lkOiBwb3N0SWR9LCB7JGluYzoge3B2OiAxfX0pXG4gICAgICAgICAgICAuZXhlYygpO1xuICAgIH0sXG4gICAgZ2V0UmF3UG9zdEJ5SWQ6IGZ1bmN0aW9uIChwb3N0SWQpe1xuICAgICAgICByZXR1cm4gUG9zdFxuICAgICAgICAgICAgLmZpbmRPbmUoe19pZDogcG9zdElkfSlcbiAgICAgICAgICAgIC5wb3B1bGF0ZSh7cGF0aDogJ2F1dGhvcicsIG1vZGVsOiAnVXNlcid9KVxuICAgICAgICAgICAgLmV4ZWMoKTtcbiAgICB9LFxuICAgIHVwZGF0ZVBvc3RCeUlkOiBmdW5jdGlvbihwb3N0SWQsIGRhdGEpe1xuICAgICAgICByZXR1cm4gUG9zdFxuICAgICAgICAgICAgLnVwZGF0ZSh7X2lkOiBwb3N0SWR9LCB7JHNldDogZGF0YX0pXG4gICAgICAgICAgICAuZXhlYygpO1xuICAgIH0sXG4gICAgZGVsUG9zdEJ5SWQ6IGZ1bmN0aW9uIChwb3N0SWQpe1xuICAgICAgICByZXR1cm4gUG9zdFxuICAgICAgICAgICAgLmRlbGV0ZU9uZSh7X2lkOiBwb3N0SWR9KVxuICAgICAgICAgICAgLmV4ZWMoKVxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICBpZihyZXMucmVzdWx0Lm9rICYmIHJlcy5yZXN1bHQubiA+IDApe1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gQ29tbWVudE1vZGVsLmRlbENvbW1lbnRzQnlQb3N0SWQocG9zdElkKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICB9XG59O1xuIl19
